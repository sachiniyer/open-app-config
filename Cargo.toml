[workspace]
members = [
    "shared-types",
    "server",
    "client",
]
resolver = "2"

[workspace.lints.rust]
# Use Rust's built-in lint groups
unsafe_code = "deny"
missing_docs = "allow"  # We can enable this later when we add documentation

# Rust 2018 idioms and best practices
rust_2018_idioms = { level = "deny", priority = -1 }
rust_2024_compatibility = { level = "warn", priority = -1 }

# All warnings as errors
warnings = "deny"
dead_code = "deny"

[workspace.lints.clippy]
# Enable all default clippy lints
all = { level = "deny", priority = -1 }

# Enable pedantic lints for better code quality
pedantic = { level = "warn", priority = -1 }

# But allow these specific ones that are too strict or not applicable
missing_errors_doc = "allow"
missing_panics_doc = "allow"
must_use_candidate = "allow"
module_name_repetitions = "allow"

# Explicitly deny dangerous patterns
# Tests can override these with #![cfg_attr(test, allow(clippy::unwrap_used))]
unwrap_used = "deny"
expect_used = "deny"
panic = "warn"
todo = "warn"
unimplemented = "warn"

[workspace.dependencies]
# Common async runtime
tokio = { version = "1.40", features = ["full"] }

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# Logging and tracing
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter", "fmt"] }

# Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# Time handling
chrono = { version = "0.4", features = ["serde"] }

# Async trait support
async-trait = "0.1"

# HTTP and API
axum = "0.7"
reqwest = { version = "0.12", features = ["json"] }
